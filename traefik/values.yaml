global: {}

# Monitoring settings
serviceMonitor:
  enabled: false

# Persistent storage settings
persistence:
  enabled: false

# User & Security settings
unique-user: &unique-user 10037

# CronJob settings
cronjob:
  enabled: false
  schedule: "0 */12 * * *"

# ConfigMap settings
configmap:
  enabled: true
  data:
    conf: |
      {
         "AUTH_BASE": "https://keycloak.fintech-farm.com",
         "AUTH_REALM": "admin_auth_point_prod_vietnam",
         "AUTH_CLIENT": "dog-cli",
         "API_BASE": "/api/admin/"
      }

# Secrets management
secret:
  enabled: false

externalSecret:
  enabled: false
  apiVersion: external-secrets.io/v1beta1
  secretPath: /prod/applications/customer-support-panel-frontend
  secretStoreKind: ClusterSecretStore
  secretStoreName: vn-prod

# Image policy settings for FluxCD
imagepolicy:
  enabled: true
  apiVersion: image.toolkit.fluxcd.io/v1beta1
  name: customer-support-panel-frontend
  namespace: fintech-farm
  policy:
    semver:
      range: '>=0.0.1'
  filterTags:
    pattern: '^vi-prod-v(?P<version>[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3})$'
    extract: '$version'

# Image repository settings
imagerepository:
  enabled: true
  name: customer-support-panel-frontend
  namespace: fintech-farm
  secret: ecr-credentials

# Autoscaling settings
autoscaling:
  enabled: false
  apiVersion: autoscaling/v2
  minReplicas: &minReplicas 1
  maxReplicas: 4
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 50
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 50

# Container image settings
image:
  registry: 375424272383.dkr.ecr.ap-southeast-1.amazonaws.com
  repository: customer
  tag: vi-prod-v0.0.44 # {"$imagepolicy": "fintech-farm:customer-support-panel-frontend:tag"}
  pullPolicy: IfNotPresent
  pullSecrets: ["ecr-credentials"]
  debug: false

# Replica settings
replicaCount: *minReplicas

# Service settings
service:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80

# Ingress settings
ingress:
  enabled: false
  apiVersion: networking.k8s.io/v1
  hostname: customer-support-front.prod.liobank.vn
  path: /
  annotations:
    kubernetes.io/ingress.class: "nginx"

# Istio VirtualService settings
istio:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    external-dns.alpha.kubernetes.io/target: dualstack.internal-vietnam-production-private-2094748717.ap-southeast-1.elb.amazonaws.com
  spec:
    gateways:
      - istio-system/ingress
    hosts:
      - customer-support-front.prod.liobank.vn

# ArgoCD settings
argocd:
  enabled: true
  namespace: "argocd"
  project: "customer-support"
  projectEnabled: true
  repoURL: "https://github.com/fintech-farm/customer-support-panel-frontend.git"
  targetRevision: "main"
  path: "charts/customer-support-panel-frontend"
  server: "https://kubernetes.default.svc"
  automated:
    prune: true
    selfHeal: true
  syncOptions:
    - CreateNamespace=true
  configmap:
    enabled: true
  secret:
    enabled: true
    password: "changeme"

# ServiceAccount settings
serviceAccount:
  name: ""
  annotations: {}

# Resource limits & requests
resources:
  limits:
    memory: 512Mi
  requests:
    memory: 512Mi

# Security Context settings
podSecurityContext:
  enabled: false
  fsGroup: *unique-user

containerSecurityContext:
  enabled: false
  runAsUser: *unique-user

# Deployment strategy
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: "25%"
    maxUnavailable: "25%"

# Extra configurations
extraEnvVars: []
extraEnvVarsCM: []
extraEnvVarsSecret: []
extraVolumes:
  - name: system-conf
    configMap:
      name: customer-support-panel-frontend
extraVolumeMounts:
  - name: system-conf
    mountPath: /app/system/conf
    subPath: conf

# Pod labels & annotations
podLabels:
  app: customer-support-panel-frontend
  sidecar.istio.io/inject: "true"

podAnnotations:
  app: customer-support-panel-frontend

# Affinity, NodeSelector, and Tolerations
affinity: {}
nodeSelector: {}
tolerations: []

# Probes
livenessProbe:
  enabled: false
  httpGet:
    path: /actuator/health/liveness
    port: 80

readinessProbe:
  enabled: false
  httpGet:
    path: /actuator/health/readiness
    port: 80
